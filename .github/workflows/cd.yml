---
name: CD

# yamllint disable-line rule:truthy
on:
  push:
    # FIXME: Temporarily run on ci-fixes branch while testing
    branches: [main, ci-fixes]

permissions:
  pull-requests: write
  contents: write

jobs:
  build-and-upload-artifacts:
    name: Build & Upload Artifacts (${{ matrix.target }})
    # if: startsWith(github.event.release.name, 'tetanes')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: wasm32-unknown-unknown
            os: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - if: ${{ !startsWith(matrix.target, 'wasm32') }}
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      - if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y libudev-dev libasound2-dev libssl-dev libfuse2 build-essential pkg-config
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-make
      - if: startsWith(matrix.os, 'ubuntu')
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deb
      - if: startsWith(matrix.os, 'windows')
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-wix
      - if: startsWith(matrix.target, 'wasm32')
        run: cargo run --bin build_artifacts web
      - if: ${{ !startsWith(matrix.target, 'wasm32') }}
        run: cargo run --bin build_artifacts
      - uses: actions/upload-artifact@v4
        name: "Upload artifacts"
        with:
          name: ${{ matrix.target }}-artifacts
          path: dist/
      - if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} dist/* --clobber
